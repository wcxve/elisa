name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "docs/**"
      - "README.md"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Tests (Python 3.12 in Linux-x86_64)
            os: "ubuntu-latest"
            python-version: "3.12"
            extra-deps: "nested_sampler,test"

          - name: Tests (Python 3.12 in macOS-arm64)
            os: "macos-latest"
            python-version: "3.12"
            extra-deps: "nested_sampler,test"

          - name: Tests (Minimum Version Deps)
            os: "ubuntu-latest"
            python-version: "3.9"
            extra-deps: "nested_sampler,test,mindep"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python Dependencies
        run: |
          pip install -U pip
          pip install ".[${{ matrix.extra-deps }}]" --verbose

      - name: Run Tests
        run: |
          pytest

      - name: Upload Coverage Results
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  build:
    name: Build Source Distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python Dependencies
        run: |
          pip install -U pip
          pip install -U build twine

      - name: Build and Check Source Distribution
        run: |
          python -m build --sdist .
          python -m twine check --strict dist/*

      - name: Upload Source Distribution as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: elisa
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [tests, build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    environment:
      name: PyPI
      url: https://pypi.org/p/astro-elisa
    permissions:
      id-token: write
    steps:
      - name: Download Source Distribution
        uses: actions/download-artifact@v4
        with:
          name: elisa
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
