[project]
name = "astro-elisa"
version = "0.2.1"
description = "Efficient library for spectral analysis in high-energy astrophysics."
readme = "README.md"
requires-python = ">=3.10, <3.14"
license = "GPL-3.0-or-later"
authors = [
    { name = "Wang-Chen Xue", email = "wcxuemail@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
]
dependencies = [
    "arviz~=0.22.0",
    "astropy>=5.3,<7.2",
    "blackjax==1.2.5",
    "corner~=2.2.2",
    "dill~=0.4.0",
    "emcee~=3.1.6",
    "h5py~=3.14.0",
    "iminuit~=2.31.1",
    # equinox v0.13.0 is not compatible with jax v0.7.1
    "jax>=0.4.35,<=0.7.0",
    "jaxns~=2.6.9",
    "matplotlib>=3.8.0",
    "multiprocess~=0.70.18",
    "nautilus-sampler~=1.0.5",
    "numpy>=1.24.1",
    "numpyro>=0.16.1,<0.20",
    "optimistix~=0.0.10",
    "prettytable>=3.12.0,<3.17",
    "quadax>=0.2.6,<0.3",
    "scipy>=1.11.1,<1.17",
    "seaborn~=0.13.2",
    "tinygp~=0.3.0",
    "tqdm~=4.67",
    "ultranest~=4.4.0",
    "zeus-mcmc~=2.5.4",
]

[project.urls]
Documentation = "https://github.com/wcxve/elisa#readme"
Issues = "https://github.com/wcxve/elisa/issues"
Source = "https://github.com/wcxve/elisa"

[project.optional-dependencies]
dev = [
    "pre-commit~=4.0",
    "ruff>=0.12.0",
]
docs = [
    "ipywidgets",
    "jupyter",
    "jupyterlab_widgets",
    "sphinx>=7.4.0",
    "sphinx-autodoc-typehints",
    "sphinx-codeautolink",
    "sphinx-copybutton",
    "sphinx-design",
    "myst-nb",
    "numba",
    "numpydoc",
    "pydata-sphinx-theme",
    "widgetsnbextension",
]
test = [
    "coverage[toml]~=7.8.0",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]
xspec = ["xspex~=0.1.1"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage]
run.concurrency = [
    "thread",
    "multiprocessing",
]
run.parallel = true
run.sigterm = true
run.source_pkgs = ["elisa"]
run.omit = [
    "src/elisa/infer/samplers/ns/jaxns.py",
    "src/elisa/models/tables",
]
report.exclude_also = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "if __name__ == .__main__.:",
    # typing.TYPE_CHECKING is False at runtime
    "if TYPE_CHECKING:",
    # Don't complain about abstract methods' implementations
    '@(abc\.)?abstractmethod',
]
report.show_missing = true

[tool.hatch]
build.targets.sdist.only-include = ["src/elisa"]
build.targets.wheel.packages = ["src/elisa"]

[tool.pytest]
ini_options.addopts = "-v -n auto --cov --cov-report=xml --junitxml=junit.xml"
ini_options.testpaths = ["tests"]

[tool.ruff]
line-length = 79
target-version = "py310"
extend-exclude = [
    "src/elisa/infer/samplers/ns/jaxns.py",
]
format.quote-style = "single"
lint.extend-select = ["Q"]
lint.flake8-quotes.inline-quotes = "single"
lint.ignore = [
    "B028", # allow warnings without stacklevel
    "C901", # allow functions with a high complexity
    "E731", # allow lambda functions
]
lint.isort.known-first-party = ["elisa"]
lint.isort.combine-as-imports = true
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "UP", # pyupgrade
]
# lint.pydocstyle.convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/notebooks/model-building.ipynb" = ["F403", "F405"]
